[{"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\index.js":"1","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\App.js":"3","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Header\\index.js":"4","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Nav\\index.js":"5","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Footer\\index.js":"6","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Main\\index.js":"7","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\utils\\API.js":"8","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\utils\\GlobalContext.js":"9","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\pages\\Frontpage\\index.js":"10","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\PostPreview\\index.js":"11","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\pages\\Article\\index.js":"12","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Aside\\index.js":"13","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Dropdown\\index.js":"14","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\CommentBox\\index.js":"15","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Comment\\index.js":"16","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\LoginForm\\index.js":"17"},{"size":500,"mtime":1607196680767,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1047,"mtime":1610838908115,"results":"21","hashOfConfig":"19"},{"size":1147,"mtime":1610740833534,"results":"22","hashOfConfig":"19"},{"size":3110,"mtime":1610833295828,"results":"23","hashOfConfig":"19"},{"size":204,"mtime":1607201991071,"results":"24","hashOfConfig":"19"},{"size":623,"mtime":1610833219449,"results":"25","hashOfConfig":"19"},{"size":878,"mtime":1610495922543,"results":"26","hashOfConfig":"19"},{"size":1614,"mtime":1610833234296,"results":"27","hashOfConfig":"19"},{"size":1623,"mtime":1610311075425,"results":"28","hashOfConfig":"19"},{"size":591,"mtime":1610307784357,"results":"29","hashOfConfig":"19"},{"size":4085,"mtime":1610837482570,"results":"30","hashOfConfig":"19"},{"size":373,"mtime":1610397484979,"results":"31","hashOfConfig":"19"},{"size":919,"mtime":1610746114093,"results":"32","hashOfConfig":"19"},{"size":1059,"mtime":1610653679858,"results":"33","hashOfConfig":"19"},{"size":431,"mtime":1610646910779,"results":"34","hashOfConfig":"19"},{"size":2565,"mtime":1610741132351,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1i73twk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\index.js",[],["83","84"],"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\App.js",["85"],"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Header\\index.js",["86","87"],"import {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport LoginForm from \"../../components/LoginForm\";\r\n\r\nimport Nav from \"../Nav\";\r\n\r\nfunction Header() {\r\n\r\n    const [loginState, dispatch] = useGlobalContext();\r\n    const [modal, setModal] = useState(false);\r\n\r\n    function handleLogout() {\r\n        API.logout().then(dispatch({\r\n            type: \"logout\"\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <header>\r\n            <Link to = \"/home\" id = \"logo\">The Good Stuff</Link>\r\n            {\r\n                loginState.username ? \r\n                <button className = \"darkbutton\" onClick = {() => handleLogout()}>Logout</button>\r\n                :\r\n                <p id = \"login-prompt\" onClick = {() => setModal(!modal)}>Login / Signup</p>\r\n            }\r\n            {\r\n                modal ? \r\n                <LoginForm modal = {modal} closeModal = {() => setModal(false)}/>\r\n                :\r\n                \"\"\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Nav\\index.js",["88","89","90"],"import {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nimport Dropdown from \"../../components/Dropdown\";\r\n\r\nfunction Nav() {\r\n\r\n    const [, dispatch] = useGlobalContext();\r\n    const [genre, setGenre] = useState(\"\");\r\n    const [hover, setHover] = useState({\r\n        review: false,\r\n        ruminations: false,\r\n        random: false\r\n    });\r\n    const [articles, setArticles] = useState(false);\r\n    let filteredArticles = articles ? articles.filter(article => article.genre === genre) : [];\r\n\r\n    useEffect(() => {\r\n        API.getArticles().then(function(response) {\r\n            setArticles(response.data.rows);\r\n            filteredArticles = response.data.rows.filter(article => article.genre === genre);\r\n        });\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        <nav onMouseLeave = {() => setHover(false)}>\r\n            <div className = \"navbutton\" onMouseEnter = {() => {\r\n                    setHover({\r\n                        ruminations: false,\r\n                        random: false,\r\n                        review: true\r\n                    });\r\n                    setGenre(\"Reviews\");\r\n                }} \r\n                // onMouseLeave = {() => setHover(false)}\r\n                >\r\n                <p>Reviews</p>\r\n                {\r\n                    hover.review ? \r\n                    <Dropdown filteredArticles = {filteredArticles} onMouseLeave = {() => setHover(false)} genre = {genre}/>\r\n                    :\r\n                    \"\"\r\n                }\r\n            </div>\r\n            <div className = \"navbutton\" onMouseEnter = {() => {\r\n                    setHover({\r\n                        review: false,\r\n                        random: false,\r\n                        ruminations: true\r\n                    });\r\n                    setGenre(\"Ruminations\");\r\n                }} \r\n                // onMouseLeave = {() => setHover(false)}\r\n                >\r\n                <p>Ruminations</p>\r\n                {\r\n                    hover.ruminations ? \r\n                    <Dropdown filteredArticles = {filteredArticles} onMouseLeave = {() => setHover(false)} genre = {genre}/>\r\n                    :\r\n                    \"\"\r\n                }\r\n            </div>\r\n            <div className = \"navbutton\" onMouseEnter = {() => {\r\n                    setHover({\r\n                        review: false,\r\n                        ruminations: false,\r\n                        random: true\r\n                    });\r\n                    setGenre(\"Random\");\r\n                }} \r\n                // onMouseLeave = {() => setHover(false)}\r\n                >\r\n                <p>Random</p>\r\n                {\r\n                    hover.random ?\r\n                    <Dropdown filteredArticles = {filteredArticles} onMouseLeave = {() => setHover(false)} genre = {genre}/>\r\n                    :\r\n                    \"\"\r\n                }\r\n            </div>\r\n        </nav>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Nav;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Main\\index.js",["91","92","93"],"import {useEffect, useState} from \"react\";\r\nimport \"./style.css\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction Main(props) {\r\n    \r\n    const [state, dispatch] = useGlobalContext();\r\n\r\n    useEffect(() => {\r\n        API.checkLoggedIn().then((response) => {\r\n            dispatch({\r\n                type: \"login\",\r\n                username: response.data.username,\r\n                userId: response.data.id\r\n            });\r\n        })\r\n    }, [])\r\n\r\n    return(\r\n        <main>\r\n            {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\utils\\API.js",[],"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\utils\\GlobalContext.js",[],"C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\pages\\Frontpage\\index.js",["94","95","96","97"],"import React, {useEffect, useState} from \"react\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport PostPreview from \"../../components/PostPreview\";\r\nimport Aside from \"../../components/Aside\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction Frontpage() {\r\n\r\n    const [state, dispatch] = useGlobalContext();\r\n    const [asideFixed, setAsideFixed] = useState(false);\r\n    // const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        API.getPosts()\r\n        .then(({data}) => {\r\n            console.log(data);\r\n            dispatch({\r\n                type: \"getPosts\",\r\n                posts: data.rows\r\n            })\r\n        }\r\n        );\r\n    }, []);\r\n\r\n\r\n\r\n    function capitalize(string) {\r\n        try {\r\n            return (string.slice(0)[0].toUpperCase() + string.slice(1));\r\n        }\r\n\r\n        catch {\r\n            return string;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id = \"frontpage\">\r\n            <div id = \"posts\">\r\n            {\r\n                state.posts.length > 0 ?\r\n                state.posts.map(post => {\r\n                    return(\r\n                        <PostPreview \r\n                            title = {post.title}\r\n                            body = {post.body}\r\n                            createdAt = {post.createdAt}    \r\n                        />\r\n                    );\r\n                })\r\n                : \r\n                \"\"\r\n            }\r\n            </div>\r\n            <div id = \"spacer\">\r\n                <Aside />\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Frontpage;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\PostPreview\\index.js",["98"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction PostPreview(props) {\r\n\r\n    function fixDate(date) {\r\n        let slashDate = date.replace(/-/g, \"/\");\r\n        return slashDate.replace(date.replace(/-/g, \"/\").split(\"/\")[2].slice(2), \"\");\r\n    }\r\n    \r\n    return(\r\n        <div className = \"post-preview\">\r\n            <h3>{props.title}</h3>\r\n            <p className = \"date\">{fixDate(props.createdAt)}</p>\r\n            <br />\r\n            <p className = \"body\">{props.body}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostPreview;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\pages\\Article\\index.js",["99","100"],"import React, {useState, useEffect} from \"react\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport API from \"../../utils/API\";\r\nimport CommentBox from \"../../components/CommentBox\";\r\nimport Comment from \"../../components/Comment\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction Article() {\r\n    const [state, dispatch] = useGlobalContext();\r\n\r\n    const [article, setArticle] = useState({\r\n        data: 0\r\n    });\r\n\r\n    const [comments, setComments] = useState([]);\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        API.getArticle(window.location.pathname.split(\"/\")[2])\r\n        .then(({data}) => {\r\n            \r\n            let spacedBody = \"\\t\" + data.body.replace(/\\n/g, \"\\n\\n\\t\");\r\n           \r\n            // let newBody = spacedBody.replace(/\\[.*?\\]/g, \"<img src = 'https://gamerdame.files.wordpress.com/2011/06/rof2.jpg' alt = \" + imgLink + \"/>\")\r\n            // console.log(splitBody);\r\n            // let newBodyWithImg = newBody.replace(/###LINK/g, )\r\n            setArticle({\r\n                ...data,\r\n                newBody: spacedBody\r\n            });\r\n            setLoaded(true);\r\n        });\r\n\r\n        API.getComments(window.location.pathname.split(\"/\")[2])\r\n        .then(({data}) => {\r\n            setComments(data);\r\n        });\r\n    }\r\n    ,[state.article]);\r\n\r\n\r\n    function renderBody() {\r\n        article.newBody = article.newBody.trimEnd();\r\n        if (article.newBody.indexOf(\"###IMG\") !== -1) {            \r\n            let imgSplit = article.newBody.split(/(\\[.*?\\]+)/);\r\n            return(\r\n                imgSplit.map(item => {\r\n                    if (item.indexOf(\"###IMG\") !== -1) {\r\n                        let imgSrc = \"/images/\" + item.slice(8, item.indexOf(\"###]\")).trim() + \".jpg\";\r\n                        let alt = article.title;\r\n                        return <img alt = {alt} src = {imgSrc} />\r\n                    }\r\n                    else {\r\n                        return <p>{item}</p>\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        else {\r\n            return <p>{article.newBody}</p>\r\n        } \r\n    }\r\n\r\n    function fixDate(date) {\r\n        try {\r\n            let slashDate = date.replace(/-/g, \"-\");\r\n            let numberedDate = slashDate.replace(date.replace(/-/g, \"/\").split(\"/\")[2].slice(2), \"\");\r\n            let monthNum = parseInt(numberedDate.split(\"-\")[1]);\r\n            return months[monthNum-1] + \" \" + numberedDate.split(\"-\")[2] + \", \" + numberedDate.split(\"-\")[0]\r\n        }\r\n        catch {\r\n            return date\r\n        }\r\n    }\r\n\r\n    function capitalize(string) {\r\n        try {\r\n            return (string.slice(0)[0].toUpperCase() + string.slice(1));\r\n        }\r\n        catch {\r\n            return string;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <article>\r\n            {\r\n                loaded ?\r\n                <>\r\n                 <div id = \"topper\">\r\n                    <h3>{article.title}</h3>\r\n                    <p id = \"date\">{fixDate(article.createdAt)}</p>    \r\n                </div>\r\n               <br />\r\n\r\n                <div id = \"body\">\r\n                    {renderBody()}\r\n                </div>\r\n             </>\r\n             :\r\n             <p>Please Wait...</p>\r\n            }\r\n            </article>\r\n            {\r\n                state.userId ? \r\n                <CommentBox articleId = {window.location.pathname.split(\"/\")[2]} />\r\n                :\r\n                \"\"\r\n            }\r\n            <div id = \"comment-section\">\r\n                {\r\n                    comments ? \r\n                    comments.map(item => {\r\n                        return(\r\n                            <Comment item = {item} fixDate = {fixDate}/>\r\n                        );\r\n                    })\r\n                    :\r\n                    \"\"\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Aside\\index.js",["101","102","103","104","105"],"import {useEffect, useState} from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Aside() {\r\n\r\n    const [visible, setVisible] = useState(true);\r\n    const [yPosition, setYPosition] = useState(0);\r\n   \r\n\r\n    return(\r\n        <aside>\r\n            <p>Aside, dawg.</p>\r\n            <p>Here's some filler text for all y'all</p>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Aside;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Dropdown\\index.js",["106","107","108","109"],"import {useEffect, useState} from \"react\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport {Link} from \"react-router-dom\";\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\n\r\nfunction Dropdown({onMouseLeave, filteredArticles}) {\r\n\r\n    const [state, dispatch] = useGlobalContext();\r\n\r\n    return (\r\n        <div id = \"dropdown\" >\r\n            {\r\n                filteredArticles.length > 0 ?\r\n                filteredArticles.map(item => <Link onClick = { () =>\r\n                   { \r\n                    dispatch({\r\n                        type: \"getArticle\",\r\n                        article: item.id\r\n                    })\r\n                    onMouseLeave();\r\n                    }\r\n                    \r\n                } to = {\"/article/\" + item.id}>{item.title}</Link>)\r\n                :\r\n                \"\"\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dropdown;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\CommentBox\\index.js",["110","111"],"import {useState, useEffect} from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport \"./style.css\";\r\n\r\nfunction CommentBox({articleId, userId}) {\r\n    const [state, dispatch] = useGlobalContext();\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    function handleInputChange(event) {\r\n        setComment(event.target.value);\r\n    }\r\n\r\n    function submitComment(event) {\r\n        event.preventDefault(); \r\n        \r\n        const detail = {\r\n            articleId: articleId,\r\n            userId: state.userId,\r\n            comment: comment\r\n        }\r\n        API.postComment(detail);\r\n    }\r\n\r\n    return(\r\n        <div id = \"commentbox\">\r\n            <textarea \r\n                onChange = {handleInputChange} \r\n                id = \"commentbox\"\r\n                placeholder = \"Comment...\">\r\n            </textarea>\r\n\r\n            <button className = \"darkbutton\" onClick = {(event) => submitComment(event)}>Submit</button>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default CommentBox;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\Comment\\index.js",["112","113"],"import {useState, useEffect} from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Comment({item, fixDate}) {\r\n    return(\r\n        <div className = \"comment\">\r\n            <p className = \"author\">{item.User.username}</p>\r\n            <p className = \"comment-date\"><em>{fixDate(item.createdAt)}</em></p>\r\n            <br />\r\n            <p className = \"comment-body\">{item.body}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comment;","C:\\Users\\Hunter\\Documents\\Code\\TheGoodStuff\\client\\src\\components\\LoginForm\\index.js",["114","115","116","117","118","119","120","121"],"import {useEffect, useState} from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport {useGlobalContext} from \"../../utils/GlobalContext\";\r\nimport \"./style.css\";\r\n\r\nfunction LoginForm(props) {\r\n\r\n    const [loginState, dispatch] = useGlobalContext();\r\n\r\n\r\n    const [login, setLogin] = useState(true);\r\n    const [state, setState] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    function handleInputChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.placeholder.toLowerCase()]: event.target.value\r\n        });\r\n        console.log(state);\r\n    }\r\n\r\n    function handleLogin(event) {\r\n        event.preventDefault();\r\n        if (login) {\r\n            API.login(state).then(response => {\r\n                dispatch({\r\n                    type: \"login\", \r\n                    username: response.data.username, \r\n                    userId: response.data.id\r\n                });\r\n                props.closeModal();\r\n            });    \r\n        }\r\n\r\n        else {\r\n            API.signup(state).then(response => {\r\n                dispatch({\r\n                    type: \"login\", \r\n                    username: response.data.username, \r\n                    userId: response.data.id\r\n                });\r\n                props.closeModal();\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id = \"login-modal\" style = {props.modal ? {display: \"flex\"} : {display: \"none\"}}>\r\n            <form id = \"login-box\" onChange = {handleInputChange}>\r\n                <input placeholder = \"Username\" style = {login ? {display: \"none\"} : {display: \"block\"}} />\r\n                <input type = \"email\" placeholder = \"Email\" />\r\n                <input type = \"password\" placeholder = \"Password\" />\r\n                <span id = \"login-buttons\">\r\n                    <button onClick = {(event) => handleLogin(event)}>{login ? \"Login\" : \"Signup\"}</button>\r\n                    <button onClick = {(event) => {\r\n                        event.preventDefault();\r\n                        setLogin(!login)\r\n                        }}>{!login ? \"Login?\" : \"Sign Up?\"}</button>\r\n                </span>\r\n                <div className = \"darkbutton\" id = \"close-modal\" onClick = {() => props.closeModal()}>\r\n                    <p>x</p>\r\n                </div>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;",["122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"128","severity":1,"message":"132","line":1,"column":19,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"133","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":11},{"ruleId":"128","severity":1,"message":"134","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"135","line":11,"column":14,"nodeType":"130","messageId":"131","endLine":11,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":24,"column":32,"nodeType":"138","endLine":24,"endColumn":93},{"ruleId":"128","severity":1,"message":"139","line":1,"column":20,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"140","line":8,"column":12,"nodeType":"130","messageId":"131","endLine":8,"endColumn":17},{"ruleId":"136","severity":1,"message":"141","line":18,"column":8,"nodeType":"142","endLine":18,"endColumn":10,"suggestions":"143"},{"ruleId":"128","severity":1,"message":"144","line":11,"column":12,"nodeType":"130","messageId":"131","endLine":11,"endColumn":22},{"ruleId":"128","severity":1,"message":"145","line":11,"column":24,"nodeType":"130","messageId":"131","endLine":11,"endColumn":37},{"ruleId":"136","severity":1,"message":"141","line":24,"column":8,"nodeType":"142","endLine":24,"endColumn":10,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"147","line":28,"column":14,"nodeType":"130","messageId":"131","endLine":28,"endColumn":24},{"ruleId":"128","severity":1,"message":"134","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"135","line":10,"column":19,"nodeType":"130","messageId":"131","endLine":10,"endColumn":27},{"ruleId":"128","severity":1,"message":"147","line":81,"column":14,"nodeType":"130","messageId":"131","endLine":81,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":1,"column":9,"nodeType":"130","messageId":"131","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"148","line":6,"column":12,"nodeType":"130","messageId":"131","endLine":6,"endColumn":19},{"ruleId":"128","severity":1,"message":"149","line":6,"column":21,"nodeType":"130","messageId":"131","endLine":6,"endColumn":31},{"ruleId":"128","severity":1,"message":"150","line":7,"column":12,"nodeType":"130","messageId":"131","endLine":7,"endColumn":21},{"ruleId":"128","severity":1,"message":"151","line":7,"column":23,"nodeType":"130","messageId":"131","endLine":7,"endColumn":35},{"ruleId":"128","severity":1,"message":"132","line":1,"column":9,"nodeType":"130","messageId":"131","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"139","line":1,"column":20,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"152","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":11},{"ruleId":"128","severity":1,"message":"140","line":9,"column":12,"nodeType":"130","messageId":"131","endLine":9,"endColumn":17},{"ruleId":"128","severity":1,"message":"132","line":1,"column":19,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"135","line":7,"column":19,"nodeType":"130","messageId":"131","endLine":7,"endColumn":27},{"ruleId":"128","severity":1,"message":"139","line":1,"column":9,"nodeType":"130","messageId":"131","endLine":1,"endColumn":17},{"ruleId":"128","severity":1,"message":"132","line":1,"column":19,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"132","line":1,"column":9,"nodeType":"130","messageId":"131","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"153","line":8,"column":12,"nodeType":"130","messageId":"131","endLine":8,"endColumn":22},{"ruleId":"128","severity":1,"message":"154","line":18,"column":12,"nodeType":"130","messageId":"131","endLine":18,"endColumn":20},{"ruleId":"128","severity":1,"message":"155","line":18,"column":22,"nodeType":"130","messageId":"131","endLine":18,"endColumn":33},{"ruleId":"128","severity":1,"message":"156","line":19,"column":12,"nodeType":"130","messageId":"131","endLine":19,"endColumn":20},{"ruleId":"128","severity":1,"message":"157","line":19,"column":22,"nodeType":"130","messageId":"131","endLine":19,"endColumn":33},{"ruleId":"128","severity":1,"message":"158","line":20,"column":12,"nodeType":"130","messageId":"131","endLine":20,"endColumn":17},{"ruleId":"128","severity":1,"message":"159","line":20,"column":19,"nodeType":"130","messageId":"131","endLine":20,"endColumn":27},{"ruleId":"124","replacedBy":"160"},{"ruleId":"126","replacedBy":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Nav' is defined but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'filteredArticles' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useState' is defined but never used.","'state' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'asideFixed' is assigned a value but never used.","'setAsideFixed' is assigned a value but never used.",["165"],"'capitalize' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'yPosition' is assigned a value but never used.","'setYPosition' is assigned a value but never used.","'API' is defined but never used.","'loginState' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.",["162"],["163"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},"Update the dependencies array to be: [dispatch]",{"range":"169","text":"170"},{"range":"171","text":"170"},[507,509],"[dispatch]",[707,709]]